{"version":3,"sources":["services/entities/decorators/RegistraDecoradorPropriedade.ts","services/entities/decorators/Tipo.ts"],"names":["RegistraDecoradorPropriedade","nome","destino","propriedade","valor","Reflect","hasMetadata","constructor","defineMetadata","valorAtual","getMetadata","Tipo","Tipos","entity"],"mappings":"2GAAO,SAASA,EAA6BC,EAAcC,EAAiBC,EAA8BC,GACnGC,QAAQC,YAAYL,EAAMC,EAAQK,cACrCF,QAAQG,eAAeP,EAAM,GAAIC,EAAQK,aAE3C,IAAME,EAAaJ,QAAQK,YAAYT,EAAMC,EAAQK,aACrDE,EAAWN,GAAeC,EAC1BC,QAAQG,eAAeP,EAAMQ,EAAYP,EAAQK,aANnD,qE,iCCAA,uGAOaI,EAAO,SAACP,GACnB,OAAO,SAACF,EAAiBC,GACvBH,uCAA6B,OAAQE,EAASC,EAAaC,KAIxD,SAASQ,EAASC,GACvB,OAAOR,QAAQK,YAAY,OAAQG","file":"static/js/57.a06cacf5.chunk.js","sourcesContent":["export function RegistraDecoradorPropriedade(nome: string, destino: Object, propriedade: string | symbol, valor: any) {\n  if (!Reflect.hasMetadata(nome, destino.constructor)) {\n    Reflect.defineMetadata(nome, {}, destino.constructor);\n  }\n  const valorAtual = Reflect.getMetadata(nome, destino.constructor);\n  valorAtual[propriedade] = valor;\n  Reflect.defineMetadata(nome, valorAtual, destino.constructor);\n}\n","import 'reflect-metadata';\nimport { RegistraDecoradorPropriedade } from './RegistraDecoradorPropriedade';\n\nexport interface ITipo {\n  [key: string]: 'string' | 'number' | 'date' | 'boolean' | 'object' | 'datetime';\n}\n\nexport const Tipo = (valor: 'string' | 'number' | 'date' | 'boolean' | 'object' | 'datetime'): PropertyDecorator => {\n  return (destino: Object, propriedade: string | symbol) => {\n    RegistraDecoradorPropriedade('Tipo', destino, propriedade, valor)\n  };\n};\n\nexport function Tipos<T>(entity: new () => T) {\n  return Reflect.getMetadata('Tipo', entity) as ITipo;\n}\n"],"sourceRoot":""}