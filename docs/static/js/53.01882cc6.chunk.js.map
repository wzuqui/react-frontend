{"version":3,"sources":["services/entities/decorators/RegistraDecoradorPropriedade.ts","services/entities/decorators/Etiqueta.ts"],"names":["RegistraDecoradorPropriedade","nome","destino","propriedade","valor","Reflect","hasMetadata","constructor","defineMetadata","valorAtual","getMetadata","Etiqueta","Etiquetas","entity"],"mappings":"2GAAO,SAASA,EAA6BC,EAAcC,EAAiBC,EAA8BC,GACnGC,QAAQC,YAAYL,EAAMC,EAAQK,cACrCF,QAAQG,eAAeP,EAAM,GAAIC,EAAQK,aAE3C,IAAME,EAAaJ,QAAQK,YAAYT,EAAMC,EAAQK,aACrDE,EAAWN,GAAeC,EAC1BC,QAAQG,eAAeP,EAAMQ,EAAYP,EAAQK,aANnD,qE,iCCAA,+GAOaI,EAAW,SAACP,GACvB,OAAO,SAACF,EAAiBC,GACvBH,uCAA6B,WAAYE,EAASC,EAAaC,KAI5D,SAASQ,EAAaC,GAC3B,OAAOR,QAAQK,YAAY,WAAYG","file":"static/js/53.01882cc6.chunk.js","sourcesContent":["export function RegistraDecoradorPropriedade(nome: string, destino: Object, propriedade: string | symbol, valor: any) {\n  if (!Reflect.hasMetadata(nome, destino.constructor)) {\n    Reflect.defineMetadata(nome, {}, destino.constructor);\n  }\n  const valorAtual = Reflect.getMetadata(nome, destino.constructor);\n  valorAtual[propriedade] = valor;\n  Reflect.defineMetadata(nome, valorAtual, destino.constructor);\n}\n","import 'reflect-metadata';\nimport { RegistraDecoradorPropriedade } from './RegistraDecoradorPropriedade';\n\nexport interface IEtiqueta {\n  [key: string]: string;\n}\n\nexport const Etiqueta = (valor: string): PropertyDecorator => {\n  return (destino: Object, propriedade: string | symbol) => {\n    RegistraDecoradorPropriedade('Etiqueta', destino, propriedade, valor);\n  };\n};\n\nexport function Etiquetas<T>(entity: new () => T) {\n  return Reflect.getMetadata('Etiqueta', entity) as IEtiqueta;\n}\n"],"sourceRoot":""}